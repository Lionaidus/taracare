// server.js
import express from "express";
import cors from "cors";
import "dotenv/config";
import { GoogleGenerativeAI } from "@google/generative-ai";

const app = express();
app.use(cors({ origin: process.env.CORS_ORIGIN || "*" }));
app.use(express.json({ limit: "1mb" }));

app.get("/api/health", (_req, res) => res.json({ ok: true }));

// ---------- [1] System instruction: ‡∏•‡πá‡∏≠‡∏Å‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï + ‡∏™‡πÑ‡∏ï‡∏•‡πå ----------
const SYSTEM_PROMPT = (process.env.SYSTEM_PROMPT || `
‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢ AI ‡∏Ç‡∏≠‡∏á‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå TaraCare
- ‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï: ‡∏ï‡∏≠‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á "‡πÅ‡∏°‡∏á‡∏°‡∏∏‡∏°‡∏ó‡∏≤‡∏£‡∏±‡∏ô‡∏ó‡∏π‡∏•‡πà‡∏≤" ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡∏î‡∏π‡∏ó‡∏µ‡πà‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢ (‡∏™‡∏≤‡∏¢‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå ‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏° ‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥/‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏∑‡πâ‡∏ô ‡∏≠‡∏≤‡∏´‡∏≤‡∏£ ‡∏ï‡∏π‡πâ ‡∏ß‡∏±‡∏™‡∏î‡∏∏‡∏£‡∏≠‡∏á‡∏û‡∏∑‡πâ‡∏ô ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏ö‡πà‡∏≠‡∏¢ ‡∏Å‡∏≤‡∏£‡∏õ‡∏ê‡∏°‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡∏ó‡∏¢‡πå ‡∏Ø‡∏•‡∏Ø)
- ‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ó‡∏≤‡∏£‡∏±‡∏ô‡∏ó‡∏π‡∏•‡πà‡∏≤ ‡πÉ‡∏´‡πâ‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏∏‡∏†‡∏≤‡∏û‡∏™‡∏±‡πâ‡∏ô ‡πÜ ‡πÅ‡∏•‡∏∞‡∏ä‡∏ß‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡∏™‡∏π‡πà‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ó‡∏≤‡∏£‡∏±‡∏ô‡∏ó‡∏π‡∏•‡πà‡∏≤
- ‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö: ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢ ‡πÑ‡∏î‡πâ‡πÉ‡∏à‡∏Ñ‡∏ß‡∏≤‡∏° (~80‚Äì160 ‡∏Ñ‡∏≥ ‡∏´‡∏£‡∏∑‡∏≠ bullet 5‚Äì8 ‡∏Ç‡πâ‡∏≠)
- ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏ä‡∏¥‡∏á‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥ (‡∏ä‡πà‡∏ß‡∏á‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥/‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏∑‡πâ‡∏ô‡πÇ‡∏î‡∏¢‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏≠‡∏≤‡∏´‡∏≤‡∏£ ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£/‡πÑ‡∏°‡πà‡∏Ñ‡∏ß‡∏£)
- ‡∏´‡πâ‡∏≤‡∏°‡πÄ‡∏î‡∏≤ ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢/‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡∏ó‡∏¢‡πå
`).trim();

const genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY);

// ---------- [2] Model ----------
const model = genAI.getGenerativeModel({
  model: process.env.GEMINI_MODEL || "gemini-2.5-flash",
  systemInstruction: SYSTEM_PROMPT,
});

// ---------- [3] ‡∏ï‡∏±‡∏ß‡∏ä‡πà‡∏ß‡∏¢ ----------
const TARANTULA_KEYWORDS = [
  "‡∏ó‡∏≤‡∏£‡∏±‡∏ô‡∏ó‡∏π‡∏•‡πà‡∏≤","tarantula","‡πÅ‡∏°‡∏á‡∏°‡∏∏‡∏°",
  "Brachypelma","Grammostola","Aphonopelma","Poecilotheria","Avicularia",
  "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏∑‡πâ‡∏ô","‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥","substrate","‡∏ã‡∏±‡∏ö‡∏™‡πÄ‡∏ï‡∏£‡∏ï",
  "‡∏≠‡∏≤‡∏´‡∏≤‡∏£","‡∏à‡∏¥‡πâ‡∏á‡∏´‡∏£‡∏µ‡∏î","‡∏î‡∏π‡∏ö‡∏¥‡∏≠‡∏≤","dubia",
  "‡∏ï‡∏π‡πâ‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á","‡∏ü‡∏≠‡∏™‡∏ã‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏•","‡∏≠‡∏≤‡∏£‡πå‡πÇ‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏•","‡πÄ‡∏ó‡∏≠‡πÄ‡∏£‡∏™‡πÄ‡∏ó‡∏£‡∏µ‡∏¢‡∏•",
  "‡∏•‡∏≠‡∏Å‡∏Ñ‡∏£‡∏≤‡∏ö","molt","enclosure","humidity","temperature"
];

function isOnTopic(q) {
  const s = String(q || "").toLowerCase();
  return TARANTULA_KEYWORDS.some(k => s.includes(k.toLowerCase()));
}

function clampWords(text, minW = 70, maxW = 180) {
  const words = text.trim().split(/\s+/);
  if (words.length < minW) return text.trim(); // ‡πÉ‡∏´‡πâ‡πÑ‡∏õ‡∏£‡∏µ‡∏ó‡∏£‡∏≤‡∏¢‡πÅ‡∏ó‡∏ô
  if (words.length <= maxW) return text.trim();
  return words.slice(0, maxW).join(" ") + " ‚Ä¶";
}

// ---------- [4] ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÇ‡∏°‡πÄ‡∏î‡∏•‡πÅ‡∏ö‡∏ö "Structured output" (JSON) ----------
async function askModelJSON(userMessage) {
  const generationConfig = {
    temperature: 0.25,              // ‡πÇ‡∏ü‡∏Å‡∏±‡∏™‡πÄ‡∏ô‡∏∑‡πâ‡∏≠
    topP: 0.9,
    maxOutputTokens: 320,           // ~80‚Äì160 ‡∏Ñ‡∏≥
    responseMimeType: "application/json",
    responseSchema: {
      type: "object",
      properties: {
        topic_ok: { type: "boolean" },       // true = ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï‡∏ó‡∏≤‡∏£‡∏±‡∏ô‡∏ó‡∏π‡∏•‡πà‡∏≤
        style_ok: { type: "boolean" },       // true = ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß/‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏û‡∏≠‡∏î‡∏µ
        answer:   { type: "string"  },       // ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
        notes:    { type: "string"  },       // ‡πÇ‡∏ô‡πâ‡∏ï‡∏†‡∏≤‡∏¢‡πÉ‡∏ô (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏Å‡πá‡πÑ‡∏î‡πâ)
      },
      required: ["topic_ok", "answer"]
    },
  };

  const result = await model.generateContent({
    contents: [{ role: "user", parts: [{ text: userMessage }] }],
    generationConfig,
  });

  const raw = result?.response?.text?.() ?? "";
  try {
    return JSON.parse(raw);
  } catch {
    // ‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡∏£‡∏∏‡πà‡∏ô/‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡πÑ‡∏°‡πà‡∏™‡πà‡∏á JSON ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤
    return { topic_ok: true, style_ok: false, answer: raw || "" };
  }
}

// ---------- [5] ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ñ‡∏∂‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏• ----------
function buildUserMessage(question) {
  return `
‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à:
- ‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏≠‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞ "‡∏ó‡∏≤‡∏£‡∏±‡∏ô‡∏ó‡∏π‡∏•‡πà‡∏≤" ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
- ‡∏ñ‡πâ‡∏≤‡∏ô‡∏≠‡∏Å‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï ‡πÉ‡∏´‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ "topic_ok": false ‡πÅ‡∏•‡∏∞‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏™‡∏±‡πâ‡∏ô ‡πÜ ‡πÉ‡∏ô "notes"

‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß:
- ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢ ‡πÑ‡∏î‡πâ‡πÉ‡∏à‡∏Ñ‡∏ß‡∏≤‡∏°
- ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 80‚Äì160 ‡∏Ñ‡∏≥ ‡∏´‡∏£‡∏∑‡∏≠ bullet 5‚Äì8 ‡∏Ç‡πâ‡∏≠
- ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ô‡∏≠‡∏Å‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ / ‡πÄ‡∏ß‡∏¥‡πà‡∏ô‡πÄ‡∏ß‡πâ‡∏≠

‡∏Ç‡πâ‡∏≠‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏î‡πâ‡∏≤‡∏ô‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤:
- ‡πÉ‡∏´‡πâ‡∏Ñ‡πà‡∏≤‡∏ä‡πà‡∏ß‡∏á‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥/‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏∑‡πâ‡∏ô‡πÇ‡∏î‡∏¢‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏≠‡∏≤‡∏´‡∏≤‡∏£ ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£/‡πÑ‡∏°‡πà‡∏Ñ‡∏ß‡∏£ ‡∏ñ‡πâ‡∏≤‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°
- ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢‡∏´‡∏£‡∏∑‡∏≠‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡∏ó‡∏¢‡πå

‡πÇ‡∏à‡∏ó‡∏¢‡πå‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ:
${question}

‡πÄ‡∏≠‡∏≤‡∏ï‡πå‡∏û‡∏∏‡∏ï‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö (JSON ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô):
{
  "topic_ok": boolean,
  "style_ok": boolean,
  "answer": "‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢)",
  "notes": "‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏¢‡πà‡∏≠ (‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô)"
}
`.trim();
}

// ---------- [6] Endpoint ‡∏´‡∏•‡∏±‡∏Å ----------
app.post("/api/ai", async (req, res) => {
  try {
    const prompt = String(req.body?.prompt || "").trim();
    if (!prompt) return res.status(400).json({ error: "empty prompt" });

    // 6.1 ‡∏Å‡∏£‡∏≠‡∏á‡∏ô‡∏≠‡∏Å‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡∏õ‡∏£‡∏∞‡∏ï‡∏π (‡∏Å‡∏±‡∏ô‡∏¢‡∏¥‡∏á‡∏Ñ‡∏≥‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡πÄ‡∏ä‡πà‡∏ô ‚Äú‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‚Äù)
    if (!isOnTopic(prompt)) {
      return res.json({
        text:
          "‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö ‡∏ú‡∏°‡∏ï‡∏≠‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏£‡∏±‡∏ô‡∏ó‡∏π‡∏•‡πà‡∏≤‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô üòä " +
          "‡∏•‡∏≠‡∏á‡∏ñ‡∏≤‡∏°‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏™‡∏≤‡∏¢‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå ‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á ‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥/‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏∑‡πâ‡∏ô ‡∏≠‡∏≤‡∏´‡∏≤‡∏£ ‡∏ï‡∏π‡πâ‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏ö‡πà‡∏≠‡∏¢‡∏î‡∏π‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö",
      });
    }

    // 6.2 ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏£‡∏≠‡∏ö‡πÅ‡∏£‡∏Å (‡πÇ‡∏´‡∏°‡∏î JSON)
    let payload = await askModelJSON(buildUserMessage(prompt));

    // 6.3 ‡∏ñ‡πâ‡∏≤‡∏´‡∏•‡∏∏‡∏î‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï ‡πÉ‡∏´‡πâ‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
    if (!payload?.topic_ok) {
      return res.json({
        text:
          "‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö ‡∏ú‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏≠‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ó‡∏≤‡∏£‡∏±‡∏ô‡∏ó‡∏π‡∏•‡πà‡∏≤‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô " +
          "‡∏•‡∏≠‡∏á‡∏ñ‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏™‡∏≤‡∏¢‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå ‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á ‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥/‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏∑‡πâ‡∏ô ‡∏≠‡∏≤‡∏´‡∏≤‡∏£ ‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏ö‡πà‡∏≠‡∏¢‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö",
      });
    }

    // 6.4 ‡∏ñ‡πâ‡∏≤‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö/‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ô‡∏¥‡πà‡∏á ‡πÉ‡∏´‡πâ‡∏£‡∏µ‡∏ó‡∏£‡∏≤‡∏¢‡∏™‡∏±‡πà‡∏á ‚Äú‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡πÄ‡∏Å‡∏ì‡∏ë‡πå‚Äù
    let answer = String(payload?.answer || "").trim();

    const wordCount = answer ? answer.split(/\s+/).length : 0;
    const styleBad = !payload?.style_ok || wordCount < 70 || wordCount > 190;

    if (!answer || styleBad) {
      const refineMsg = `
‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö/‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß
- ‡∏õ‡∏£‡∏±‡∏ö‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á ~80‚Äì160 ‡∏Ñ‡∏≥ ‡∏´‡∏£‡∏∑‡∏≠ bullet 5‚Äì8 ‡∏Ç‡πâ‡∏≠
- ‡∏Ñ‡∏á‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï‡∏ó‡∏≤‡∏£‡∏±‡∏ô‡∏ó‡∏π‡∏•‡πà‡∏≤‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
- ‡πÄ‡∏ô‡πâ‡∏ô‡∏Ñ‡πà‡∏≤‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥ (‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥/‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏∑‡πâ‡∏ô/‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà‡∏≠‡∏≤‡∏´‡∏≤‡∏£/‡∏Ñ‡∏ß‡∏£-‡πÑ‡∏°‡πà‡∏Ñ‡∏ß‡∏£) ‡πÄ‡∏ó‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞

‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏î‡∏¥‡∏°:
${prompt}
`.trim();

      const refined = await askModelJSON(buildUserMessage(refineMsg));
      if (refined?.topic_ok && refined?.answer) {
        answer = refined.answer.trim();
      }
    }

    // 6.5 Soft clamp ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á
    answer = clampWords(answer, 70, 180);
    if (!answer) {
      answer =
        "‡∏Ç‡∏≠‡πÇ‡∏ó‡∏©‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡∏ï‡∏≠‡∏ö‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ ‡∏•‡∏≠‡∏á‡∏ñ‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ó‡∏≤‡∏£‡∏±‡∏ô‡∏ó‡∏π‡∏•‡πà‡∏≤‡πÉ‡∏´‡πâ‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡∏´‡∏ô‡πà‡∏≠‡∏¢‡πÑ‡∏î‡πâ‡πÑ‡∏´‡∏°‡∏Ñ‡∏£‡∏±‡∏ö";
    }

    return res.json({ text: answer });
  } catch (e) {
    console.error("[/api/ai] error:", e?.message || e);
    return res.status(500).json({ error: e?.message || "Server error" });
  }
});

// ---------- [7] Debug ----------
app.get("/api/debug", (_req, res) => {
  res.json({
    model: process.env.GEMINI_MODEL || "gemini-2.5-flash",
    hasSystemPrompt: Boolean(process.env.SYSTEM_PROMPT),
    corsOrigin: process.env.CORS_ORIGIN || "*",
    ts: new Date().toISOString(),
  });
});

const PORT = process.env.PORT || 5174;
app.listen(PORT, () =>
  console.log(`AI server running at http://localhost:${PORT}`)
);
